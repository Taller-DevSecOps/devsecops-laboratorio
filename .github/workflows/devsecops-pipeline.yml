name: 'Pipeline de Seguridad'

on:
  push:
    branches:
      - main
      - develop
      - pipeline-seguridad
  pull_request:
    branches:
      - main
      - develop

jobs:
  devsecops:
    name: Análisis de Seguridad y Calidad
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: read
      security-events: write 

    env:
      SONAR_HOST_URL: https://sonarcloud.io
      SONAR_PROJECT_KEY: parmijot_devsecops-laboratorio
      SONAR_ORGANIZATION: parmijot

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Instalar dependencias
        run: npm ci

      - name: Auditoría de dependencias con npm audit
        run: |
          npm audit --audit-level=high || true
        continue-on-error: true

      - name: Escanear código y dependencias con Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          format: 'table'
          exit-code: '0'
          vuln-type: 'os,library'
          output: 'trivy-report.txt'

      - name: Escaneo IaC con Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          format: 'table'
          exit-code: '0'
          output: 'trivy-iac.txt'

      - name: Análisis con SonarCloud
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.qualitygate.wait=true
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/build/**,**/dist/**

      - name: Validar Quality Gate de SonarCloud
        uses: SonarSource/sonarqube-quality-gate-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Publicar resultados
        run: |
          echo "### Resultados del análisis" >> $GITHUB_STEP_SUMMARY
          echo "**Quality Gate:** Validado en SonarCloud" >> $GITHUB_STEP_SUMMARY
          echo "**Reportes Trivy:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat trivy-report.txt | tail -n 20 >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
